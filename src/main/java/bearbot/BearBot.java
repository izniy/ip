package bearbot;

import java.util.ArrayList;
import java.util.Scanner;

import bearbot.commands.Command;
import bearbot.exceptions.BearBotException;
import bearbot.parser.Parser;
import bearbot.storage.Storage;
import bearbot.tasks.TaskList;
import bearbot.ui.Ui;
import javafx.application.Platform;

/**
 * Main logic for BearBot, handling task management and user commands.
 */
public class BearBot {
    private static final String FILE_PATH = "./data/bearbot.txt"; // Path to store tasks
    private final TaskList taskList;
    private final Storage storage;
    private final Ui ui;
    private final Scanner scanner;

    /**
     * Initializes BearBot by loading tasks from storage.
     */
    public BearBot() {
        this.storage = new Storage(FILE_PATH);
        this.ui = new Ui();
        this.scanner = new Scanner(System.in);

        TaskList tempTaskList;
        try {
            tempTaskList = new TaskList(storage); // Load tasks from storage
        } catch (Exception e) {
            System.out.println("Error loading tasks. Starting with an empty list.");
            tempTaskList = new TaskList(storage, new ArrayList<>()); // Start fresh if loading fails
        }
        this.taskList = tempTaskList;
    }

    /**
     * Runs BearBot in console mode.
     */
    public void run() {
        ui.showWelcomeMessage();

        String input;
        while (true) {
            input = scanner.nextLine();
            if (input.equalsIgnoreCase("bye")) {
                handleExit();
                break;
            }

            try {
                Command command = Parser.parse(input, taskList);
                command.execute();
            } catch (BearBotException e) {
                System.out.println(e.getMessage());
            } catch (Exception e) {
                System.out.println("UNKNOWN ERROR TO BEARS");
            }
        }

        saveTasksOnExit();
    }

    /**
     * Processes user input and returns a response for GUI.
     *
     * @param input The user's command.
     * @return The response generated by BearBot.
     */
    public String getResponse(String input) {
        if (input.equalsIgnoreCase("bye")) {
            Platform.exit(); // Close the GUI
            return handleExit();
        }

        try {
            Command command = Parser.parse(input, taskList);
            return command.execute();
        } catch (BearBotException e) {
            return e.getMessage();
        } catch (Exception e) {
            return "UNKNOWN ERROR TO BEARS";
        }
    }

    /**
     * Handles the "bye" command for both Console and GUI.
     *
     * @return Goodbye message for the user.
     */
    private String handleExit() {
        saveTasksOnExit();
        return "Goodnight! BearBot is entering hibernation... üêª";
    }

    /**
     * Saves tasks before exiting the application.
     */
    private void saveTasksOnExit() {
        try {
            storage.save(taskList.getTasks()); // Save before exiting
            System.out.println("Tasks saved successfully!"); // Log to console
        } catch (Exception e) {
            System.out.println("Error saving tasks.");
        }
    }

    public static void main(String[] args) {
        new BearBot().run();
    }
}
